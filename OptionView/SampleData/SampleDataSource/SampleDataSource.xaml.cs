//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.SampleDataSource
{
    using System; 
    using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
    internal class SampleDataSource { }
#else

    public class SampleDataSource : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        public SampleDataSource()
        {
            try
            {
                Uri resourceUri = new Uri("/OptionView;component/SampleData/SampleDataSource/SampleDataSource.xaml", UriKind.RelativeOrAbsolute);
                System.Windows.Application.LoadComponent(this, resourceUri);
            }
            catch
            {
            }
        }

        private ItemCollection _Collection = new ItemCollection();

        public ItemCollection Collection
        {
            get
            {
                return this._Collection;
            }
        }
    }

    public class Item : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _StartTime = string.Empty;

        public string StartTime
        {
            get
            {
                return this._StartTime;
            }

            set
            {
                if (this._StartTime != value)
                {
                    this._StartTime = value;
                    this.OnPropertyChanged("StartTime");
                }
            }
        }

        private string _EndTime = string.Empty;

        public string EndTime
        {
            get
            {
                return this._EndTime;
            }

            set
            {
                if (this._EndTime != value)
                {
                    this._EndTime = value;
                    this.OnPropertyChanged("EndTime");
                }
            }
        }

        private string _Symbol = string.Empty;

        public string Symbol
        {
            get
            {
                return this._Symbol;
            }

            set
            {
                if (this._Symbol != value)
                {
                    this._Symbol = value;
                    this.OnPropertyChanged("Symbol");
                }
            }
        }

        private string _Strategy = string.Empty;

        public string Strategy
        {
            get
            {
                return this._Strategy;
            }

            set
            {
                if (this._Strategy != value)
                {
                    this._Strategy = value;
                    this.OnPropertyChanged("Strategy");
                }
            }
        }

        private double _Cost = 0;

        public double Cost
        {
            get
            {
                return this._Cost;
            }

            set
            {
                if (this._Cost != value)
                {
                    this._Cost = value;
                    this.OnPropertyChanged("Cost");
                }
            }
        }

        private bool _Earnings = false;

        public bool Earnings
        {
            get
            {
                return this._Earnings;
            }

            set
            {
                if (this._Earnings != value)
                {
                    this._Earnings = value;
                    this.OnPropertyChanged("Earnings");
                }
            }
        }

        private string _Comments = string.Empty;

        public string Comments
        {
            get
            {
                return this._Comments;
            }

            set
            {
                if (this._Comments != value)
                {
                    this._Comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }
    }

    public class ItemCollection : System.Collections.ObjectModel.ObservableCollection<Item>
    { 
    }
#endif
}
