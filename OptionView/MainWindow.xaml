<Window x:Class="OptionView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OptionView"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1200" Left="100" Top="100"
        Closing="MainWindow_Closing"
        Loaded="Window_Loaded">


    <Window.Resources>

        <!-- MoveThumb Template -->
        <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type local:MoveTile}" >
            <Rectangle Fill="Transparent" MouseLeftButtonDown="TileMouseDown"/>
        </ControlTemplate>

        <!-- Context menu for tiles -->
        <ContextMenu x:Key="TileContextMenu" HorizontalOffset="150" >
            <MenuItem Header="Combine" Click="CombineClick"></MenuItem>
        </ContextMenu>

        <!-- Item Template -->
        <ControlTemplate x:Key="GreenTileTemplate" TargetType="{x:Type ContentControl}">
            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Width="150" Height="100" ContextMenuOpening="ContextMenuValidationCheck" ContextMenu="{StaticResource TileContextMenu}">
                <local:MoveTile Template="{StaticResource MoveThumbTemplate}" DragCompleted="TileDragCompleted" />
                <Border BorderThickness="3">
                    <Rectangle RadiusY="5.18" RadiusX="5.18" IsHitTestVisible="False">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                        <RotateTransform Angle="315" CenterY="0.5" CenterX="0.5"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <GradientStop Color="#FF538C2B" Offset="0.978"/>
                                <GradientStop Color="#FF45761F" Offset="0.113"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Border>
                <ContentPresenter Content="{TemplateBinding Content}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Panel.ZIndex" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="RedTileTemplate" TargetType="{x:Type ContentControl}">
            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Width="150" Height="100" ContextMenuOpening="ContextMenuValidationCheck" ContextMenu="{StaticResource TileContextMenu}">
                <local:MoveTile Template="{StaticResource MoveThumbTemplate}" DragCompleted="TileDragCompleted" />
                <Border BorderThickness="3" >
                    <Rectangle RadiusY="5.18" RadiusX="5.18" IsHitTestVisible="False" >
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                        <RotateTransform Angle="315" CenterY="0.5" CenterX="0.5"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <GradientStop Color="#FFAE2C20" Offset="0.974"/>
                                <GradientStop Color="#FF91151D" Offset="0.113"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Border>
                <ContentPresenter Content="{TemplateBinding Content}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Panel.ZIndex" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type TabControl}">
            <!-- Shared Setters -->
            <Setter Property="FontFamily" Value="Trebuchet MS" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style TargetType="{x:Type Label}">
            <!-- Shared Setters -->
            <Setter Property="FontFamily" Value="Trebuchet MS" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style TargetType="{x:Type StackPanel}">
            <!-- Shared Setters -->
            <Setter Property="Background" Value="#FF454545" />
            <Setter Property="Margin" Value="2,0,2,0" />
            <Setter Property="DockPanel.Dock" Value="Top" />
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Calibri Light" />
            <Setter Property="FontSize" Value="14" />
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridRow_MouseLeftButtonDown"/>
        </Style>
        <Style TargetType="DataGridCell" x:Key="DefaultCell">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" >
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGridCell" BasedOn="{StaticResource DefaultCell}" />

        <Style BasedOn="{StaticResource DefaultCell}" TargetType="DataGridCell" x:Key="RightJustifiedCell" >
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
        </Style>






        <Style x:Key="SymbolHeader" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style x:Key="SymbolDetails" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style x:Key="SymbolDetailsRight" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Canvas.Right" Value="-30" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style x:Key="TileCanvas" TargetType="{x:Type Canvas}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="59" />
            <Setter Property="Width" Value="101" />
            <Setter Property="Margin" Value="10,10,0,0" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>



        <ControlTemplate x:Key="PropertyTile" TargetType="{x:Type ContentControl}">
            <StackPanel Background="LightGray" Margin="2,0,2,0">
                <Label Content="Label" Margin="6,0,0,0" />
                <TextBlock  Text="TextBlock" Background="White" Margin="6,0,6,6" Padding="4,4,4,4"/>
                <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
            </StackPanel>
        </ControlTemplate>



    </Window.Resources>

    <Grid d:DataContext="{d:DesignData /SampleData/PortfolioResultsSampleData.xaml}">
        <TabControl Name="MainTab" Background="Black">
            <TabItem Width="150" Height="30" Header="Holdings">
                <Grid Background="Black" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="ContentCol" MinWidth="200" />
                        <ColumnDefinition x:Name="DetailsCol" MaxWidth="200" Width="200*"/>
                    </Grid.ColumnDefinitions>

                    <Canvas x:Name="MainCanvas"  Grid.Column="0"  Background="#FF454545" MouseLeftButtonDown="CanvasMouseDown" Margin="4,4,0,4" >

                        <ContentControl Canvas.Top="10" Canvas.Left="80" Template="{DynamicResource GreenTileTemplate}" Selector.IsSelected="True" >
                            <Canvas Style="{DynamicResource TileCanvas}" >
                                <Rectangle Name="SelectedFrame" Stroke="Gray" Visibility="Hidden" StrokeThickness="1" StrokeDashArray="2" IsHitTestVisible="False" Margin="-10,-10,0,0" Width="150" Height="100" />

                                <TextBlock Text="Symbol" Style="{DynamicResource SymbolHeader}"/>
                                <TextBlock Text="Text" Canvas.Top="18" Style="{DynamicResource SymbolDetails}" Height="24"/>
                                <TextBlock Text="Text2" Canvas.Top="32" Style="{DynamicResource SymbolDetails}"/>

                                <TextBlock Text="33" Style="{DynamicResource SymbolDetailsRight}"  Canvas.Top="68"  />
                                <Image Height="16" Canvas.Top="68" Width="16" Source="Icons/Alarm.ico">
                                    
                                </Image>
                            </Canvas>
                        </ContentControl>
                        <ContentControl Canvas.Top="10" Canvas.Left="290" Template="{DynamicResource RedTileTemplate}" Selector.IsSelected="True" >
                            <Canvas Style="{DynamicResource TileCanvas}" >
                                <Rectangle  Stroke="Gray" Visibility="Hidden" StrokeThickness="1" StrokeDashArray="2" IsHitTestVisible="False" Margin="-10,-10,0,0" Width="150" Height="100" />

                                <TextBlock Text="Symbol" Style="{DynamicResource SymbolHeader}"/>
                                <TextBlock Text="Text2" Style="{DynamicResource SymbolDetailsRight}"/>
                                <TextBlock Text="Text" Canvas.Top="18" Style="{DynamicResource SymbolDetails}" Height="24"/>
                                <TextBlock Text="Text2" Canvas.Top="32" Style="{DynamicResource SymbolDetails}"/>

                                <TextBlock Text="33" Style="{DynamicResource SymbolDetailsRight}"  Canvas.Top="68"  />
                                <Image Height="16" Canvas.Top="68" Width="16" Source="Icons/Alarm.ico">

                                </Image>
                            </Canvas>
                        </ContentControl>

                    </Canvas>

                    <DockPanel Grid.Column="1" Margin="4,4,4,0" >

                        <StackPanel >
                            <Label Content="Symbol" Margin="6,0,0,0" />
                            <TextBlock Name="txtSymbol" Background="Gray" Margin="6,0,6,6" Padding="5,4,4,4" IsEnabled="False"/>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel >
                            <Label Content="Strategy" Margin="6,0,0,0" />
                            <TextBox Name="txtStrategy" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" PreviewKeyDown="FieldEntryEvent"/>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel >
                            <Label Content="Exit Strategy" Margin="6,0,0,0" />
                            <TextBox Name="txtExit" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" PreviewKeyDown="FieldEntryEvent"/>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel >
                            <Label Content="Action Date" Margin="6,0,0,0" />
                            <DatePicker Name="dateAction" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" IsEnabled="False" CalendarClosed="DateAction_CalendarClosed"
                                        SelectedDateChanged="DateAction_SelectedDateChanged" PreviewKeyDown="FieldEntryEvent" IsEnabledChanged="DateAction_IsEnabledChanged"/>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>
                        
                        <StackPanel >
                            <Label Content="Comments" Margin="6,0,0,0" />
                            <TextBox Name="txtComments" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap" Height="94" AcceptsReturn="True" IsEnabled="False" PreviewKeyDown="FieldEntryEvent"/>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel >
                            <Label Content="Captial Required" Margin="6,0,0,0" />
                            <TextBox Name="txtCapital" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" PreviewKeyDown="FieldEntryEvent"/>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel >
                            <DockPanel>
                                <Label Content="Earnings Trade" Margin="6,0,6,0"  />
                                <CheckBox Name="chkEarnings" VerticalAlignment="Center" IsEnabled="False" PreviewMouseDown="CheckBoxMouseEvent" />
                            </DockPanel>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>
                        <StackPanel >
                            <DockPanel>
                                <Label Content="Neutral Strategy" Margin="6,0,6,0"  />
                                <CheckBox Name="chkNeutral" VerticalAlignment="Center" IsEnabled="False" PreviewMouseDown="CheckBoxMouseEvent" />
                            </DockPanel>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>
                        <StackPanel >
                            <DockPanel>
                                <Label Content="Defined Risk" Margin="6,0,6,0"  />
                                <CheckBox Name="chkDefinedRisk" VerticalAlignment="Center" IsEnabled="False" PreviewMouseDown="CheckBoxMouseEvent" />
                            </DockPanel>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel >
                            <Label Content="Risk" Margin="6,0,0,0" />
                            <TextBox Name="txtRisk" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" PreviewKeyDown="FieldEntryEvent"/>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel >
                            <Label Content="Details" Margin="6,0,0,0" />
                            <TextBox Name="txtDetails" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap" Height="94" AcceptsReturn="True" IsEnabled="False" PreviewKeyDown="FieldEntryEvent" FontFamily="Courier New" FontWeight="Bold"/>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel >
                            <Label Content="Date Initiated" Margin="6,0,0,0" />
                            <TextBox Name="txtStartTime" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" />
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>
                        <StackPanel >
                            <Label Content="Last Adjustment" Margin="6,0,0,0" />
                            <TextBox Name="txtEndTime" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" />
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>


                        <Button VerticalAlignment="Bottom" Height="30" Content="Load..." DockPanel.Dock="Bottom" Margin="2,0,0,4" Click="LoadButton">
                        </Button>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Width="150" Height="30" Header="Returns">
                <Grid Background="Black" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="ResultsCol" MinWidth="400" />
                        <ColumnDefinition x:Name="ControlsCol" MaxWidth="150" Width="150*"/>
                    </Grid.ColumnDefinitions>


                    <DataGrid Name="resultsGrid" AutoGenerateColumns="False" HorizontalContentAlignment="Left" Background="#FF454545" RowBackground="#FF454545"
                              Width="900" HorizontalAlignment="Left" CanUserAddRows="False" Grid.Column="0" Margin="4,4,0,4" HeadersVisibility="Column"
                              VerticalGridLinesBrush="#FF454545" HorizontalGridLinesBrush="Gray" ItemsSource="{Binding}" BorderBrush="{x:Null}" IsReadOnly="True" 
                              >
                        <DataGrid.Resources>
                            <local:GroupTotalConverter x:Key="GroupTotal"/>
                            <local:GroupNameConverter x:Key="GroupName"/>
                        </DataGrid.Resources>
                        <DataGrid.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <DockPanel Margin="10,4,12,0"  Background="Gray">
                                            <TextBlock Text="{Binding Path=Name, Converter={StaticResource GroupName}}" VerticalAlignment="Center" Padding="6,3,4,3" Foreground="White" Width="65"/>
                                            <TextBlock Text="{Binding Path=Items, Converter={StaticResource GroupTotal}}" FontSize="10" Width="200" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Right" Padding="4,4,4,3" Foreground="White" />
                                        </DockPanel>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </DataGrid.GroupStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Origin. Date" Binding="{Binding Path=StartTime, StringFormat={}{0:dd MMM yyyy}}" Width="100" />
                            <DataGridTextColumn Header="End Date" Binding="{Binding Path=EndTime, StringFormat={}{0:dd MMM yyyy}}" Width="100" />
                            <DataGridTextColumn Header="Account" Binding="{Binding Account}" Width="70" />
                            <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}" Width="70" />
                            <DataGridTextColumn Header="Strategy" Binding="{Binding Strategy}" Width="140" />
                            <DataGridTextColumn Header="Profit" Binding="{Binding Path=Cost, StringFormat=C0}" Width="80" CellStyle="{StaticResource RightJustifiedCell}" />
                            <DataGridCheckBoxColumn Header="Earnings" Binding="{Binding EarningsTrade}" Width="80" />
                            <DataGridCheckBoxColumn Header="Neutral" Binding="{Binding NeutralStrategy}" Width="80" />
                            <DataGridTextColumn Header="Comments" Binding="{Binding Comments}"  />
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <DataGrid ItemsSource="{Binding Transactions}" AutoGenerateColumns="False" CanUserAddRows="False" Background="Gray" RowBackground="Gray"
                                          HeadersVisibility="Column" Margin="20,4,4,4" BorderBrush="{x:Null}" IsReadOnly="True"  >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Date" Binding="{Binding Path=TransTime}" />
                                        <DataGridTextColumn Header="Transaction" Binding="{Binding TransType}"  />
                                        <DataGridTextColumn Header="Type" Binding="{Binding Type}"  />
                                        <DataGridTextColumn Header="Expire Date" Binding="{Binding Path=ExpDateText}" />
                                        <DataGridTextColumn Header="Strike" Binding="{Binding Path=Strike, StringFormat=C0}" Width="80" CellStyle="{StaticResource RightJustifiedCell}" />
                                        <DataGridTextColumn Header="Quantity" Binding="{Binding Path=Quantity}" Width="80" CellStyle="{StaticResource RightJustifiedCell}" />
                                        <DataGridTextColumn Header="Amount" Binding="{Binding Path=Amount, StringFormat=C0}" Width="80" CellStyle="{StaticResource RightJustifiedCell}" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>

                    </DataGrid>
                    <DockPanel  Background="#FF454545" Margin="4,4,5,0" Grid.Column="1">

                        <StackPanel Background="Black" Margin="2,4,2,0">
                            <DockPanel>
                                <Label Content="Filters" Margin="6,0,6,0" />
                            </DockPanel>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>
                        <StackPanel >
                            <ComboBox Name="cbAccount" Margin="6" Text="None" SelectionChanged="ComboBox_SelectionChanged" >
                                <ComboBoxItem Content="All" Tag="All" IsSelected="True"/>
                            </ComboBox>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>
                        <StackPanel >
                            <ComboBox Name="cbDateFilter" Margin="6" Text="None" SelectionChanged="ComboBox_SelectionChanged" >
                                <ComboBoxItem Content="All" Tag="All" IsSelected="True"/>
                                <ComboBoxItem Content="Year to Date" Tag="YTD"/>
                                <ComboBoxItem Content="Last 90 Days" Tag="90Days"/>
                                <ComboBoxItem Content="Last 30 Days" Tag="30Days"/>
                            </ComboBox>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel >
                            <DockPanel>
                                <Label Content="Earnings:" Margin="6,0,6,0"  />
                                <CheckBox Name="chkEarningsFilter" IsEnabled="True" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,12,0" Checked="FilterClick" Click="FilterClick" />
                            </DockPanel>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>
                        <StackPanel >
                            <DockPanel>
                                <Label Content="Neutral:" Margin="6,0,6,0"  />
                                <CheckBox Name="chkNeutralFilter" IsEnabled="True" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,12,0" Checked="FilterClick" Click="FilterClick" />
                            </DockPanel>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>
                        <StackPanel >
                            <DockPanel>
                                <Label Content="Defined Risk:" Margin="6,0,6,0"  />
                                <CheckBox Name="chkRiskFilter" IsThreeState="True" IsEnabled="True" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,12,0" Checked="FilterClick" Click="FilterClick" />
                            </DockPanel>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>

                        <StackPanel Background="Black" Margin="2,4,2,0">
                            <DockPanel>
                                <Label Content="Grouping" Margin="6,0,6,0" />
                            </DockPanel>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>
                        <StackPanel >
                            <ComboBox Name="cbGrouping1" Margin="6" SelectionChanged="CbGrouping1_SelectionChanged" x:FieldModifier="public">
                                <ComboBoxItem Content="None" Tag="None" IsSelected="True"/>
                                <ComboBoxItem Content="By Account" Tag="Account"/>
                                <ComboBoxItem Content="By Symbol" Tag="Symbol"/>
                                <ComboBoxItem Content="By Earnings" Tag="EarningsTrade"/>
                                <ComboBoxItem Content="By Neutral" Tag="NeutralStrategy"/>
                            </ComboBox>
                            <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                        </StackPanel>


                        <StackPanel VerticalAlignment="Bottom">
                            <StackPanel  >
                                <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                                <Label Content="Count" Margin="6,0,0,0" />
                                <TextBox Name="txtCount" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" />
                            </StackPanel>

                            <StackPanel  >
                                <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                                <Label Content="Profit" Margin="6,0,0,0" />
                                <TextBox Name="txtProfit" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" />
                            </StackPanel>
                            <StackPanel  >
                                <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                                <Label Content="Fees" Margin="6,0,0,0" />
                                <TextBox Name="txtFees" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" />
                            </StackPanel>
                            <StackPanel  >
                                <Border BorderThickness="0,0,0,1" BorderBrush="DarkGray" />
                                <Label Content="Net" Margin="6,0,0,0" />
                                <TextBox Name="txtNet" Background="White" Margin="6,0,6,6" Padding="2,4,4,4" TextWrapping="Wrap"  AcceptsReturn="True" IsEnabled="False" />
                            </StackPanel>
                        </StackPanel>

                    </DockPanel>
                </Grid>

            </TabItem>
            <TabItem Width="150" Height="30" Header="To Dos">
                <Grid Background="Black" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="ToDoCol" MinWidth="400" />
                        <ColumnDefinition x:Name="ToDoControlsCol" MaxWidth="150" Width="150*"/>
                    </Grid.ColumnDefinitions>


                    <DataGrid Name="todoGrid" AutoGenerateColumns="False" HorizontalContentAlignment="Left" Background="#FF454545" RowBackground="#FF454545"
                              Width="900" HorizontalAlignment="Left" CanUserAddRows="False" Grid.Column="0" Margin="4,4,0,4" HeadersVisibility="Column"
                              VerticalGridLinesBrush="#FF454545" HorizontalGridLinesBrush="Gray" ItemsSource="{Binding}" BorderBrush="{x:Null}" IsReadOnly="True" 
                              >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Todo Date" Binding="{Binding Path=ActionDate, StringFormat={}{0:dd MMM yyyy}}" Width="100" />
                            <DataGridTextColumn Header="Account" Binding="{Binding Account}" Width="70" />
                            <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}" Width="70" />
                            <DataGridTextColumn Header="Strategy" Binding="{Binding Strategy}" Width="140" />
                            <DataGridTextColumn Header="Exit Strategy" Binding="{Binding ExitStrategy}" Width="140" />
                            <DataGridCheckBoxColumn Header="Earnings" Binding="{Binding EarningsTrade}" Width="80" />
                            <DataGridCheckBoxColumn Header="Neutral" Binding="{Binding NeutralStrategy}" Width="80" />
                            <DataGridTextColumn Header="Comments" Binding="{Binding Comments}"  />
                        </DataGrid.Columns>
                    </DataGrid>
                    <DockPanel  Background="#FF454545" Margin="4,4,5,0" Grid.Column="1">


                    </DockPanel>
                </Grid>

            </TabItem>
        </TabControl>
    </Grid>


</Window>
